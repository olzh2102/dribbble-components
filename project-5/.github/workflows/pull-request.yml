name: Pull Request Check

concurrency:
  group: ${{github.workflow}}-${{github.head_ref}}
  cancel-in-progress: true

on: [push, pull_request]

jobs:
  unit-test:
    name: 🧪 Unit Tests
    runs-on: ubuntu-latest
    env:
      working-directory: project-5
    defaults:
      run:
        working-directory: ${{ env.working-directory }}
    steps:
      - name: ⬇️ Checkout the branch
        uses: actions/checkout@v3

      # make visible what directory job runs in
      - run: pwd

      - name: 🗃 Cache dependencies
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: 🛠 Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn

      - name: 🚦 Run Tests
        run: yarn test

  type-checking:
    name: 🔬 Type checking
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      working-directory: project-5
    defaults:
      run:
        working-directory: ${{ env.working-directory }}
    steps:
      - name: ⬇️ Checkout the branch
        uses: actions/checkout@v3

      # make visible what directory job runs in
      - run: pwd

      - name: 🗃 Cache dependencies
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: 🛠 Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn

      - name: 🔬 Type checking
        run: yarn typecheck

  deadcode-checking:
    name: 💀 Deadcode checking
    runs-on: ubuntu-latest
    env:
      working-directory: project-5
    defaults:
      run:
        working-directory: ${{ env.working-directory }}
    steps:
      - name: ⬇️ Checkout the branch
        uses: actions/checkout@v3

      # make visible what directory job runs in
      - run: pwd

      - name: 🗃 Cache dependencies
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: 🛠 Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn

      - name: 💀 Deadcode checking
        run: |
          count=`yarn check:find-deadcode | wc -l`

          if [ $count -gt 3 ]
          then
            echo "Some code is unused"
            yarn check:find-deadcode
            exit 1
          else
            echo "No deadcode :)"
          fi
